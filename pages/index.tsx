import { ChangeEvent, useState } from 'react'
import type { NextPage } from 'next'
import Head from 'next/head'
import { useRouter } from 'next/router'
import { signIn, signOut, useSession } from 'next-auth/react'
import axios from 'axios'

import client from '../prisma/client'
import { Button } from '../components/button/button'

const Home: NextPage = ({ popularCollections }: any) => {
    const router = useRouter()
    const session = useSession()

    const [query, setQuery] = useState<string | null>(null)
    const [results, setResults] = useState<any[] | null>(null)
    const [loading, setLoading] = useState<boolean>(false)
    const [error, setError] = useState<string | null>(null)

    const onInputChange = (event: ChangeEvent<HTMLInputElement>) => {
        setQuery(event.target.value.length ? event.target.value : null)
    }

    const onSearchClick = async () => {
        if (query == null) {
            return
        }

        try {
            setLoading(true)

            const response = await axios.get(`/api/search?q=${encodeURIComponent(query)}`)

            const collections = response.data.collections

            setResults(collections.length ? collections : [])
        } catch (error: any) {
            setError(error.message)
        } finally {
            setLoading(false)
        }
    }

    return (
        <>
            <Head>
                <title>D100</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className="flex justify-center items-start h-screen">
                <div className="p-32 flex flex-grow flex-col h-screen justify-center items-center">
                    <span className="uppercase text-xs text-slate-900 font-black">Introducing</span>
                    <h2 className="text-9xl font-black text-slate-900">D100</h2>
                    <div className="flex space-x-4 mt-16">
                        <Button
                            buttonType="primary"
                            text={session.data?.user == null ? 'Sign in' : 'Sign out'}
                            onClick={() => (session.data?.user == null ? signIn() : signOut())}
                        />
                        <Button buttonType="secondary" text="Create collection" onClick={() => router.push('/create')} />
                    </div>
                </div>
            </main>
        </>
    )
}

export const getStaticProps = async ({ params }: any) => {
    const popularCollections = await client.collection.findMany({
        take: 25,
        orderBy: { views: 'desc' },
        select: {
            id: true,
            name: true,
            views: true,
        },
    })

    return {
        props: {
            popularCollections: popularCollections ?? [],
        },
    }
}

export default Home
